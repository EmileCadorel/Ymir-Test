import std::io;
import std::box;
import std::concurrency::thread;

def foo (th : Thread) {
    let msg = th.pipe.read ();
    match msg {
        Box!{i32} (value-> x : _) => {
            println ("Ping : ", x);
            th.pipe.write ("Message Received");
            th.pipe.write (x + 19);
        }
    }
}

def main () {
    let th = spawn (&foo);
    th.pipe.write (23);
    let msg = th.pipe.read ();
    let val = th.pipe.read ();
    match msg {
        Box!{[c32]} (value-> x : _) =>
            println ("Pong : \n\t", x);
    }
    match val {
        Box!{i32}(value-> x : _) => 
            println ("\t", x);
    }
    th.join ();
}
